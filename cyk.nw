\title{Automatic execution of the CYK algorithm}
\author{by Simon Gustavs, Lukas Petermann and Undine Holst}

\section{Introduction}
The CYK algorithm was created by John Cocke, Daniel Younger and Tadao Kasami to determine wether 
a word is part of a particular context free grammar or not. The grammar needs to be in Chomsky normal 
form(CNF) to be tested by the CYK algorithm. Therefore the first thing happening after the user enters the 
grammar and the word is the transformation of the grammar into CNF. After that the CYK algorithm can be 
executed and the result will be put into a latex file.

\section{Usage}
To use the program either run main.py with an IDE or a text editor of your choosing or via the command line 
with the command python3 main.py.Then enter the grammar members with the following syntax:
\newline
\newline Symbols are represented by upper case letters and they are divided by commas. For the output the 
symbols will be framed by curly brackets. 
\newline E.g.: In: 'A,B,C' Out: '\{A,B,C\}'
\newline	Terminal Symbols are represented by lower case letters and are put in and out the same way as symbols.
\newline E.g.: In: 'a,b,c' Out: '\{a,b,c\}'
\newline	For each Symbol (e.g. A) there will be rules required. Those are also divided by commas. 
\newline E.g.: If A can be turned into B, a or epsilon: In: A: 'B, a, \textbackslash E' Out: \{A->B;a;\E\}
\newline	The starting symbol has to be one of the symbols(upper case). And note that epsilon has to be written as '\textbackslash E'.
\newline
\newline Next you will have to enter the word. Be careful to just use the symbols and terminal symbols you 
used when entering the syntax! After that just press enter time and time again until the program is done.
Next you can open the .tex file using your favorite editor and

\section{Overview}
Here is the overview over all included program parts:

<<main.py>>=
/*
	<<eingabe.py>>
	<<cyk.py>>
	<<tabular.py>>
	<<cnf.py>>
	<<cnf_test.py>>
*/
"""run this file"""
import subprocess
import eingabe
import cyk
import tabular
import cnf
import cnf_test


def run_pdflatex(file_name='CYK_Tableau.tex', path='.'):
    """ cnonvert tex file to pdf"""
    return subprocess.call(['pdflatex', file_name], cwd=path)


grammar = eingabe.CFG()			# eingabe.cfg.new_grammar(grammar)
word = eingabe.new_word()
cnf_test.print_grammar(grammar.rules)
	grammar.rules = dict(S={'aACa'}, A={'B', 'a'}, B={'C', 'c'}, C={'cC', r'\E'})
	grammar.start = 'S'
	grammar.alphabet = {'a', 'b', 'c'}
	grammar.variables = set(key for key in grammar.rules)
	grammar.rules = cnf.cnf(grammar)  	# bring CFG in Chomsky NF
print("cnf done")
cnf_test.print_grammar(grammar.rules)
table = cyk.cyk(grammar, word)  		# run CYK algorithm
tableau = tabular.to_latex(table, word, grammar.start, grammar.rules)
file = open(file="CYK_Tableau.tex", mode="w")
file.write(tableau)
file.close()
print('\nwritten in CYK_Tableau.tex')
run_pdflatex()
print('\noutput saved to CYK_Tableau.pdf')

@
hallo123
